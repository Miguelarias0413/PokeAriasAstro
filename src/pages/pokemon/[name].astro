---
import "../../styles/global.css";
import Layout from "../../layouts/Layout.astro";
import type { OnePokemonURL, IPokemonCard, PokemonDataResponsed, PokemonAbility, ResponseAllPokemons } from "../../types/index";
import { getPokemonColors , limitPokemonsToFetch} from "../../utils/utils";
export async function getStaticPaths() {
    const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${limitPokemonsToFetch}`); // Adjust the limit as needed
    const data :ResponseAllPokemons  = await response.json();
    const paths = data.results.map((pokemon ) => ({
        params: { name: pokemon.name },
    }));


    return Array.from(paths);
}

const { name } = Astro.params;
const url: OnePokemonURL = `https://pokeapi.co/api/v2/pokemon/${name}`;
const response = await fetch(url);
const dataOnePokemon: PokemonDataResponsed = await response.json();

const pokemon: IPokemonCard = {
    name: dataOnePokemon.name,
    id: dataOnePokemon.id,
    image: dataOnePokemon.sprites.front_default,
    abilities: dataOnePokemon.abilities.map((ability): PokemonAbility => {
        return {
            name: ability.ability.name,
        };
    }),
    weight: dataOnePokemon.weight,
    species: dataOnePokemon.species,
    types: dataOnePokemon.types,
};
const {bgColor, textColor , gradientHeader, gradientFooter} = getPokemonColors(pokemon );

---

<Layout>
    <div class={`${gradientHeader} fixed w-full h-20 flex items-center justify-center  to-transparent bg-gradient-to-b top-0 z-50`}>

    </div>
    <!-- <section class=" fixed w-screen h-screen -z-100   ">
        <div class="bolita--1 w-40 h-40 absolute rounded-full bg-red-300 top-1/2 left-[35%] mix-blend-multiply animate-breathe blur-2xl "></div>
        <div class="bolita--2  w-40 h-40 absolute rounded-full bg-green-300 top-[30%] left-[40%]  mix-blend-multiply animate-breathe blur-2xl "></div>
        <div class="bolita--3  w-40 h-40 absolute rounded-full bg-blue-300 top-[30%] left-[25%]  mix-blend-multiply animate-breathe blur-2xl"></div>
    </section> -->
    <header class={` fixed w-full h-20 flex items-center justify-center from-${bgColor} to-transparent bg-gradient-to-b  top-0 z-50`}>
        <div onclick="history.back()" class="absolute left-4 ml-4 cursor-pointer">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
        </div>
        <h1 class={`${textColor}  text-4xl font-black uppercase bg-clip-text ${gradientHeader} `}>{pokemon.name} </h1>
    </header >
    <main class={`container flex flex-col md:flex-row items-center justify-around md:gap-20 w-full min-h-screen h-auto `}>
        <article class={`${bgColor} relative overflow-hidden shrink-0 flex items-center justify-center  w-60 h-60 rounded-2xl`} transition:name={pokemon.name}>
            <img src={pokemon.image} alt="" class="h-2/4 select-none"  />
            <div class="absolute inset-0 w-full h-full select-none bg-gradient-to-t from-stone-400/20 to-transparent flex items-center justify-center">
                <h2 class={` hidden md:inline md:text-3xl font-bold uppercase -z-20 absolute top-0  ${textColor}`}>{pokemon.name}</h2>
                <div class="absolute h-14 w-full flex items-center justify-center bottom-0">
                    {
                        pokemon.types.map((type) => {
                            return (
                                <span class={`bg-white/50 text-xs font-bold px-2 py-1 rounded-full mx-1 ${textColor}`}>{type.type.name}</span>
                            );
                        })

                    }
                </div>
            </div>
        </article>
        <div class="w-1/2">
            <h2 class="text-2xl font-bold">Abilities</h2>
            <ul class="list-disc list-inside">
                {
                    pokemon.abilities.map((ability) => {
                        return (
                            <li class="text-lg">{
                                ability.name
                            }</li>
                        );
                    })
                }
            </ul>
            <h2 class="text-2xl font-bold">Weight</h2>
            <p class="text-lg">{pokemon.weight}</p>
            <h2 class="text-2xl font-bold">Species</h2>
            <p class="text-lg">{pokemon.species.name}</p>
        </div>



      

        
    </main>
    <footer class=`${gradientFooter} w-full h-20 fixed bottom-0 via-transparent to-transparent bg-gradient-to-t -z-50`> 
    </footer>
</Layout>